digraph base64_decode {
label="base64_decode"
526 [label="N526\n(rp:0, ep:0)\nexit", shape="doublecircle"]
527 [label="N527\n(rp:85, ep:85)\nentry", shape="doublecircle"]
527 -> 529 [label="%3 = alloca i32, align 4"]
529 [label="N529\n(rp:84, ep:84)", shape="circle"]
529 -> 530 [label="%4 = alloca i8*, align 8"]
530 [label="N530\n(rp:83, ep:83)", shape="circle"]
530 -> 531 [label="%5 = alloca i8*, align 8"]
531 [label="N531\n(rp:82, ep:82)", shape="circle"]
531 -> 532 [label="%6 = alloca i8*, align 8"]
532 [label="N532\n(rp:81, ep:81)", shape="circle"]
532 -> 533 [label="%7 = alloca i8*, align 8"]
533 [label="N533\n(rp:80, ep:80)", shape="circle"]
533 -> 534 [label="%8 = alloca i32, align 4"]
534 [label="N534\n(rp:79, ep:79)", shape="circle"]
534 -> 535 [label="%9 = alloca i32, align 4"]
535 [label="N535\n(rp:78, ep:78)", shape="circle"]
535 -> 537 [label="store i8* %0, i8** %4, align 8"]
537 [label="N537\n(rp:77, ep:77)", shape="circle"]
537 -> 541 [label="store i8* %1, i8** %5, align 8"]
541 [label="N541\n(rp:76, ep:76)", shape="circle"]
541 -> 542 [label="%10 = load i8*, i8** %5, align 8"]
542 [label="N542\n(rp:75, ep:75)", shape="circle"]
542 -> 543 [label="store i8* %10, i8** %7, align 8"]
543 [label="N543\n(rp:74, ep:74)", shape="circle"]
543 -> 544 [label="%11 = load i8*, i8** %4, align 8"]
544 [label="N544\n(rp:73, ep:73)", shape="circle"]
544 -> 546 [label="store i8* %11, i8** %6, align 8"]
546 [label="N546\n(rp:72, ep:40)", shape="box"]
546 -> 547 [label="%13 = load i8*, i8** %6, align 8"]
546 -> 546 [label="@", style="dashed", color="orange"]
546 -> 563 [label="@", style="dashed", color="orange"]
546 -> 575 [label="@", style="dashed", color="orange"]
547 [label="N547\n(rp:71, ep:39)", shape="circle"]
547 -> 548 [label="%14 = load i8, i8* %13, align 1"]
548 [label="N548\n(rp:70, ep:38)", shape="circle"]
548 -> 549 [label="%15 = sext i8 %14 to i32"]
549 [label="N549\n(rp:69, ep:37)", shape="circle"]
549 -> 550 [label="%16 = icmp ne i32 %15, 0"]
550 [label="N550\n(rp:68, ep:36)", shape="circle"]
550 -> 624 [label="[%16 = icmp ne i32 %15, 0]"]
550 -> 625 [label="[!(%16 = icmp ne i32 %15, 0)]"]
552 [label="N552\n(rp:65, ep:34)", shape="circle"]
552 -> 553 [label="%19 = load i8, i8* %18, align 1"]
553 [label="N553\n(rp:64, ep:33)", shape="circle"]
553 -> 554 [label="%20 = sext i8 %19 to i32"]
554 [label="N554\n(rp:63, ep:32)", shape="circle"]
554 -> 555 [label="%21 = icmp eq i32 %20, 61"]
555 [label="N555\n(rp:62, ep:31)", shape="circle"]
555 -> 627 [label="[%21 = icmp eq i32 %20, 61]"]
555 -> 629 [label="[!(%21 = icmp eq i32 %20, 61)]"]
557 [label="N557\n(rp:60, ep:29)", shape="circle"]
557 -> 558 [label="%24 = load i8, i8* %23, align 1"]
558 [label="N558\n(rp:59, ep:28)", shape="circle"]
558 -> 559 [label="%25 = sext i8 %24 to i32"]
559 [label="N559\n(rp:58, ep:27)", shape="circle"]
559 -> 560 [label="%26 = call i8* @strchr(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @base64_chars, i32 0, i32 0), i32 %25)"]
560 [label="N560\n(rp:57, ep:26)", shape="circle"]
560 -> 561 [label="%27 = icmp ne i8* %26, null"]
561 [label="N561\n(rp:56, ep:24)", shape="circle"]
561 -> 562 [label="29 = [%27 = icmp ne i8* %26, null]"]
562 [label="N562\n(rp:54, ep:22)", shape="box"]
562 -> 563 [label="31 = [%29 = phi i1 [ true, %17 ], [ %27, %22 ]]"]
563 [label="N563\n(rp:53, ep:21)", shape="box"]
563 -> 632 [label="[%31 = phi i1 [ false, %12 ], [ %29, %28 ]]"]
563 -> 633 [label="[!(%31 = phi i1 [ false, %12 ], [ %29, %28 ])]"]
566 [label="N566\n(rp:44, ep:19)", shape="circle"]
566 -> 567 [label="token_decode --@-- %34 = call i32 @token_decode(i8* %33)", style="dashed", color="blue"]
567 [label="N567\n(rp:43, ep:18)", shape="circle"]
567 -> 569 [label="store i32 %34, i32* %8, align 4"]
569 [label="N569\n(rp:42, ep:17)", shape="circle"]
569 -> 570 [label="%35 = load i32, i32* %8, align 4"]
570 [label="N570\n(rp:41, ep:16)", shape="circle"]
570 -> 571 [label="%36 = lshr i32 %35, 24"]
571 [label="N571\n(rp:40, ep:15)", shape="circle"]
571 -> 572 [label="%37 = and i32 %36, 255"]
572 [label="N572\n(rp:39, ep:14)", shape="circle"]
572 -> 573 [label="store i32 %37, i32* %9, align 4"]
573 [label="N573\n(rp:38, ep:13)", shape="circle"]
573 -> 574 [label="%38 = load i32, i32* %8, align 4"]
574 [label="N574\n(rp:37, ep:12)", shape="circle"]
574 -> 575 [label="%39 = icmp eq i32 %38, -1"]
575 [label="N575\n(rp:36, ep:11)", shape="circle"]
575 -> 634 [label="[%39 = icmp eq i32 %38, -1]"]
575 -> 635 [label="[!(%39 = icmp eq i32 %38, -1)]"]
579 [label="N579\n(rp:34, ep:71)", shape="circle"]
579 -> 580 [label="%43 = lshr i32 %42, 16"]
580 [label="N580\n(rp:33, ep:70)", shape="circle"]
580 -> 581 [label="%44 = and i32 %43, 255"]
581 [label="N581\n(rp:32, ep:69)", shape="circle"]
581 -> 582 [label="%45 = trunc i32 %44 to i8"]
582 [label="N582\n(rp:31, ep:68)", shape="circle"]
582 -> 583 [label="%46 = load i8*, i8** %7, align 8"]
583 [label="N583\n(rp:30, ep:67)", shape="circle"]
583 -> 584 [label="%47 = getelementptr inbounds i8, i8* %46, i32 1"]
584 [label="N584\n(rp:29, ep:66)", shape="circle"]
584 -> 585 [label="store i8* %47, i8** %7, align 8"]
585 [label="N585\n(rp:28, ep:65)", shape="circle"]
585 -> 586 [label="store i8 %45, i8* %46, align 1"]
586 [label="N586\n(rp:27, ep:64)", shape="circle"]
586 -> 587 [label="%48 = load i32, i32* %9, align 4"]
587 [label="N587\n(rp:26, ep:63)", shape="circle"]
587 -> 588 [label="%49 = icmp ult i32 %48, 2"]
588 [label="N588\n(rp:25, ep:62)", shape="circle"]
588 -> 636 [label="[%49 = icmp ult i32 %48, 2]"]
588 -> 598 [label="[!(%49 = icmp ult i32 %48, 2)]"]
590 [label="N590\n(rp:23, ep:60)", shape="circle"]
590 -> 591 [label="%52 = lshr i32 %51, 8"]
591 [label="N591\n(rp:22, ep:59)", shape="circle"]
591 -> 592 [label="%53 = and i32 %52, 255"]
592 [label="N592\n(rp:21, ep:58)", shape="circle"]
592 -> 593 [label="%54 = trunc i32 %53 to i8"]
593 [label="N593\n(rp:20, ep:57)", shape="circle"]
593 -> 594 [label="%55 = load i8*, i8** %7, align 8"]
594 [label="N594\n(rp:19, ep:56)", shape="circle"]
594 -> 595 [label="%56 = getelementptr inbounds i8, i8* %55, i32 1"]
595 [label="N595\n(rp:18, ep:55)", shape="circle"]
595 -> 596 [label="store i8* %56, i8** %7, align 8"]
596 [label="N596\n(rp:17, ep:54)", shape="circle"]
596 -> 598 [label="store i8 %54, i8* %55, align 1"]
598 [label="N598\n(rp:16, ep:53)", shape="box"]
598 -> 599 [label="%58 = load i32, i32* %9, align 4"]
599 [label="N599\n(rp:15, ep:52)", shape="circle"]
599 -> 600 [label="%59 = icmp ult i32 %58, 1"]
600 [label="N600\n(rp:14, ep:51)", shape="circle"]
600 -> 638 [label="[%59 = icmp ult i32 %58, 1]"]
600 -> 610 [label="[!(%59 = icmp ult i32 %58, 1)]"]
602 [label="N602\n(rp:12, ep:49)", shape="circle"]
602 -> 603 [label="%62 = and i32 %61, 255"]
603 [label="N603\n(rp:11, ep:48)", shape="circle"]
603 -> 604 [label="%63 = trunc i32 %62 to i8"]
604 [label="N604\n(rp:10, ep:47)", shape="circle"]
604 -> 605 [label="%64 = load i8*, i8** %7, align 8"]
605 [label="N605\n(rp:9, ep:46)", shape="circle"]
605 -> 606 [label="%65 = getelementptr inbounds i8, i8* %64, i32 1"]
606 [label="N606\n(rp:8, ep:45)", shape="circle"]
606 -> 607 [label="store i8* %65, i8** %7, align 8"]
607 [label="N607\n(rp:7, ep:44)", shape="circle"]
607 -> 610 [label="store i8 %63, i8* %64, align 1"]
610 [label="N610\n(rp:6, ep:43)", shape="box"]
610 -> 611 [label="%68 = load i8*, i8** %6, align 8"]
611 [label="N611\n(rp:5, ep:42)", shape="circle"]
611 -> 612 [label="%69 = getelementptr inbounds i8, i8* %68, i64 4"]
612 [label="N612\n(rp:4, ep:41)", shape="circle"]
612 -> 546 [label="store i8* %69, i8** %6, align 8"]
615 [label="N615\n(rp:51, ep:9)", shape="circle"]
615 -> 616 [label="%72 = load i8*, i8** %5, align 8"]
616 [label="N616\n(rp:50, ep:8)", shape="circle"]
616 -> 617 [label="%73 = ptrtoint i8* %71 to i64"]
617 [label="N617\n(rp:49, ep:7)", shape="circle"]
617 -> 618 [label="%74 = ptrtoint i8* %72 to i64"]
618 [label="N618\n(rp:48, ep:6)", shape="circle"]
618 -> 619 [label="%75 = sub i64 %73, %74"]
619 [label="N619\n(rp:47, ep:5)", shape="circle"]
619 -> 620 [label="%76 = trunc i64 %75 to i32"]
620 [label="N620\n(rp:46, ep:4)", shape="circle"]
620 -> 622 [label="store i32 %76, i32* %3, align 4"]
622 [label="N622\n(rp:2, ep:2)", shape="circle"]
622 -> 623 [label="%78 = load i32, i32* %3, align 4"]
623 [label="N623\n(rp:1, ep:1)", shape="circle"]
623 -> 526 [label="ret i32 %78"]
624 [label="N624\n(rp:66, ep:35)", shape="circle"]
624 -> 552 [label="%18 = load i8*, i8** %6, align 8"]
625 [label="N625\n(rp:67, ep:23)", shape="circle"]
625 -> 563 [label="31 = [false]"]
627 [label="N627\n(rp:55, ep:25)", shape="circle"]
627 -> 562 [label="29 = [true]"]
629 [label="N629\n(rp:61, ep:30)", shape="circle"]
629 -> 557 [label="%23 = load i8*, i8** %6, align 8"]
632 [label="N632\n(rp:45, ep:20)", shape="circle"]
632 -> 566 [label="%33 = load i8*, i8** %6, align 8"]
633 [label="N633\n(rp:52, ep:10)", shape="circle"]
633 -> 615 [label="%71 = load i8*, i8** %7, align 8"]
634 [label="N634\n(rp:3, ep:3)", shape="circle"]
634 -> 622 [label="store i32 -1, i32* %3, align 4"]
635 [label="N635\n(rp:35, ep:72)", shape="circle"]
635 -> 579 [label="%42 = load i32, i32* %8, align 4"]
636 [label="N636\n(rp:24, ep:61)", shape="circle"]
636 -> 590 [label="%51 = load i32, i32* %8, align 4"]
638 [label="N638\n(rp:13, ep:50)", shape="circle"]
638 -> 602 [label="%61 = load i32, i32* %8, align 4"]
}
